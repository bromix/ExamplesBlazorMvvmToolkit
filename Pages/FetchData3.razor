@page "/fetchdata3"
@using ExamplesBlazorMvvmToolkit.ViewModels
@inject WeatherViewModel3 ViewModel

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a view model by using commands and also support cancellation.</p>

<button class="btn btn-primary" disabled="@ViewModel.LoadCommand.IsRunning" @onclick="ReloadFast">@ReloadText (Fast)</button>
<button class="btn btn-primary" disabled="@ViewModel.LoadCommand.IsRunning" @onclick="ReloadSlow">@ReloadText (Slow)</button>
<button class="btn btn-danger" hidden="@(!ViewModel.LoadCommand.CanBeCanceled)" @onclick="@ViewModel.LoadCommand.Cancel">Cancel</button>
<table class="table">
    <thead>
    <tr>
        <th>Date</th>
        <th>Temp. (C)</th>
        <th>Temp. (F)</th>
        <th>Summary</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var forecast in ViewModel.Forecasts)
    {
        <tr>
            <td>@forecast.Date.ToShortDateString()</td>
            <td>@forecast.TemperatureC</td>
            <td>@forecast.TemperatureF</td>
            <td>@forecast.Summary</td>
        </tr>
    }
    </tbody>
</table>

@code {

    protected override async Task OnInitializedAsync()
    {
        await ReloadFast();
    }

    private async Task ReloadFast()
    {
        await ViewModel.LoadCommand.ExecuteAsync(TimeSpan.FromSeconds(1));
    }

    private async Task ReloadSlow()
    {
        await ViewModel.LoadCommand.ExecuteAsync(TimeSpan.FromSeconds(5));
    }

    private string ReloadText => ViewModel.LoadCommand.IsRunning ? "Loading..." : "Reload";
}